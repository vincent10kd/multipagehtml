#==============================================================================#
# Title: Functions to generate HTML output                                     #
# Author: vincent.tencate@unimedizin-mainz.de                                  #
# Date last updated: 13.04.2022                                                #
#==============================================================================#
#                                                                              #
#==============================================================================#
# Comments:                                                                    #
# Current version overwrites variables in global environment.                  #
# This is to be changed in a later version.                                    #
#==============================================================================#
# Recent fixes:                                                                #
# - Headers in tables no longer transparent with 'smooth' theme                #
# - It can now be specified whether images should be plotted before tables     #
# - Added the function create_html_template(), which creates a template script #
# - Logos can now be plotted optionally, and their filepaths specified         #
#==============================================================================#

#======================================================#
# Function definitions                                 #
#======================================================#

html_bgcol_schemes <- data.frame(matrix(nrow=6, ncol=5))
colnames(html_bgcol_schemes) <- c('theme','bgcol','headercol','opacity','left_align')
html_bgcol_schemes[1,] <- c('seafront','#b2e4eb','#75cdd9',0.2,TRUE)
html_bgcol_schemes[2,] <- c('hades','#e08079','#d9574e',0.2,TRUE)
html_bgcol_schemes[3,] <- c('mossy','#82c4a0','#39825a',0.3,FALSE)
html_bgcol_schemes[4,] <- c('officespace','#bfbfbf','#8c8c8c',0.2,TRUE)
html_bgcol_schemes[5,] <- c('meisterbuch','#044343','#044343',0.5,FALSE)
html_bgcol_schemes[6,] <- c('smooth',';background-image: linear-gradient(45deg, #49a09d, #5f2c82)',
                            'rgba(255, 255, 255, 0.1)',0.2,FALSE)


init_html_settings <- function(funPath=getwd(),
                               css_style='css_filename',
                               fileName,
                               bg_theme='smooth',
                               html_bgcol=NULL,
                               html_headercol=NULL,
                               bg_opacity=0.2,
                               left_align=TRUE,
                               rounded_headers = TRUE){
  originalwd <<- getwd()
  pfad0 <<- funPath
  if(!dir.exists(pfad0)){
    dir.create(pfad0)
  }
  if(!is.null(bg_theme)){
    if(bg_theme%in%html_bgcol_schemes$theme){
      bgind <- match(bg_theme,html_bgcol_schemes$theme)
      html_bgcol <- html_bgcol_schemes[bgind,2]
      html_headercol <- html_bgcol_schemes[bgind,3]
      bg_opacity <- html_bgcol_schemes[bgind,4]
      left_align <- html_bgcol_schemes[bgind,5]
    }
  }
  left_align <- ifelse(left_align==TRUE, 'left','center')
  centering <- ifelse(left_align=='left','xxx','auto')
  border_round <- ifelse(rounded_headers == TRUE, '10px','1px')
  pacman::p_load(openxlsx, kableExtra, flextable, officer, tableHTML)
  check_dir <- paste0(funPath,'Data')
  # if folder structure does not exist, generate it
  if(!dir.exists(check_dir)){
    dir.create(paste0(funPath,'Data'))
    dir.create(paste0(funPath,'Documents'))
    dir.create(paste0(funPath,'R'))
    dir.create(paste0(funPath,'R_my_functions'))
    dir.create(paste0(funPath,'Results_data'))
  }
  # if no CSS sheet is provided, generate basic CSS sheet
  if(!file.exists(paste0(funPath,css_style,'.css'))){
    print('making CSS')
    tableHTML::make_css(list(c('body'),
                             c('background-color','font-family','margin','padding',
                               'font-size','line-height','text-align'),
                             c(html_bgcol,'Geneva, Arial, Helvetica, Sans-Serif','20px','20px',
                               '100%','175%',left_align)),
                        list(c('#cont'),c('width','padding','border',
                                          'background','text-align'),
                             c('auto','20px 20px 20px 20px','1px solid #ffffff',
                               paste0('rgba(255,255,255,',bg_opacity,')'),left_align)),
                        list(c('h1, h2, h3, h4, h5, h6'),
                             c('color','font-weight','line-height','margin-bottom',
                               'font-family','text-align'),
                             c('black','normal','1','0.5em',
                               'Geneva, Arial, Helvetica, Sans-Serif',left_align)),
                        list('h1','font-size','190%'),
                        list('h2','font-size','175%'),
                        list('h3','font-size','150%'),
                        list('h4','font-size','125%'),
                        list('h5','font-size','100%'),
                        list('h6','font-size','100%'),
                        
                        list('hr',c('color','background-color','border',
                                    'height','max-height','min-height','text-align'),
                             c(html_headercol,html_headercol,'1px solid #ffffff',
                               '5px','5px','5px',left_align)),
                        list(c('p'),c('background-color','border','padding','color'),
                             c('#ffffff',paste0('1px solid ',html_headercol),'4px','#001122')),
                        list(c('a'),c('background-color','color'),c('#ffffff','#001122')),
                        list(c('#leftline'),c('padding-left','border-left','color'),
                             c('10px',paste0('solid 2px ',html_headercol),html_headercol)),
                        list(c('table'), 
                             c('background', 'background','margin-bottom',
                               'border-style','border-width','border-color','border-collapse',
                               'text-align','margin-left','margin-right'),
                             c('linear-gradient(white, #e2dae8)', '#transparent','1.4em',
                               'solid','2px',html_headercol,'collapse',left_align,centering,centering)),
                        list(c('tr'), c('background'), c('#transparent')),
                        list(c('tr:nth-child(even)'),c('background','background'),
                             c('#f5f5f5','#transparent')),
                        list(c('tr:hover'),c('background'),c('#e2dae8')),
                        list(c('th'),
                             c('padding','border-bottom','border-top','border-left','border-right',
                               'background-color','border-color','color'),
                             c('5px 5px 5px 5px','solid 1px black','solid 1px black','solid 1px black',
                               'solid 1px black',html_headercol,html_headercol,'#ffffff')),
                        list(c('*:not(hr) th'),
                             c('padding','border-bottom','border-top','border-left','border-right',
                               'background-color','border-color','color'),
                             c('5px 5px 5px 5px','solid 1px black','solid 1px black','solid 1px black',
                               'solid 1px black',ifelse(bg_theme=='smooth','#55608e',html_headercol),
                               ifelse(bg_theme=='smooth','#55608e',html_headercol),'#ffffff')),
                        list(c('td'),c('background','padding','border','border-color'),
                             c('transparent','5px 5px 5px 5px','solid 1px black',html_headercol)),
                        list(c('#navcontainer'),c('background','width','margin','padding',
                                                  'font-family','text-align',
                                                  'margin-left','margin-right'),
                             c('transparent','auto','0','10','georgia, Sans-Serif',left_align,
                               centering,centering)),
                        list(c('*:not(hr) #navcontainer'),c('background','width','margin',
                                                            'padding','font-family'),
                             c('transparent','auto','0','10','arial, Sans-Serif')),
                        list(c('ul#navlist'),c('text-align','list-style','padding','margin'),
                             c(left_align,'none','0','0 0 0 40')),
                        list(c('ul#navlist li a'),
                             c('display','width','max-width','padding','margin','border','color',
                               'text-decoration','background-color','max-height','height',
                               'text-align','margin-left','margin-right'),
                             c('block','600px','600px','0.1em 0.1em 0.4em 0.75em','1px',
                               paste0('1px solid ',html_headercol),'#000000',
                               'none','#e6f0d8','23px','23px',left_align,centering,centering)),
                        list(c('*:not(hr) ul#navlist li a'),
                             c('font-size','display','padding','border','color',
                               'text-decoration','background-color','max-height','height','overflow'),
                             c('90%','block','0.1em 0.1em 0.4em 0.75em',
                               paste0('1px solid ',html_headercol),'#000000',
                               'none','#dfe5ee','20px','20px','hidden')),
                        list(c('ul#navlist li#active a'),'color','#0000aa'),
                        list('ul#navlist li a:visited','color','#0000aa'),
                        list(c('ul#navlist li a:hover','ul#navlist li#active a:hover'),
                             c('color','border','background-color'),
                             c('#ffffff','1px solid #ffffff',html_headercol)),
                        list(c('#lih'),c('font-weight','width','max-width','font-size','border',
                                         'padding','display','margin','background-color','color',
                                         'height','max-height','text-align',
                                         'margin-left','margin-right',
                                         'border-radius'),
                             c('bold','655px','655px','100%','1px solid #ffffff',
                               '0.4em 0.3em 0.3em 1em','block',
                               '25 0 0 0',
                               html_headercol,'#ffffff',
                               '18px','18px',left_align,centering,centering,border_round)),
                        list(c('#brli'),
                             c('width','max-width','border',
                               'height','max-height','margin','background-color',
                               'text-align','margin-left','margin-right'),
                             c('602px','602px',paste0('1px solid',html_headercol),
                               '12px','16px','0 0 0 0',html_headercol,
                               left_align,centering,centering)),
                        list(c('img'),
                             c('background-color'),
                             c('#ffffff')),
                        file = paste0(funPath,css_style,'.css'))
  }
  css_style <<- paste0(css_style,'.css')
  setwd(paste0(funPath,'Data'))
  mainname <<- paste0(fileName)
  pfad <<- paste0(funPath,'R/Output')
  pfad2 <<- paste0(funPath,'Results_data')
  pfad3 <<- paste0(funPath,'R/Output/Plots')
  if(!dir.exists(pfad)){
    dir.create(pfad)
    dir.create(paste0(pfad,'/html'))
    dir.create(paste0(pfad,'/Tabellen'))
    dir.create(paste0(pfad,'/Tabellen/html'))
  }
  if(!dir.exists(pfad2)) dir.create(pfad2)
  if(!dir.exists(pfad3)){
    dir.create(pfad3)
    dir.create(paste0(pfad3,'/html'))
  }
}

print_signature2 <- function(name,role,
                             department='Preventive Cardiology and Medical Prevention, Dept. of Cardiology',
                             institute='University Medical Center of the Johannes Gutenberg University Mainz',
                             email,file){
  write(paste0("
               <p><b>",name,"</b> (",role,")<br>",
               department," <br>",
               institute,"<br>
               E-Mail: ", email,"<br>
               </p><p>",paste(base:::version$version.string, ':  ', utils:::citation()$'textVersion'),
               paste('</p><p>Date and time of creation:',date()),
               "</p> </div></Body></HTML>"),file,append=T)
}

create_html_main_page <- function(savePath=NULL,
                                  title=NULL,
                                  subtitle=NULL,
                                  headerVec=NULL,
                                  pageList=NULL,
                                  sigName='Your name here',
                                  sigRole='Your role here',
                                  sigEmail='youremail@email.com',
                                  sigDept='Your department here',
                                  sigInst='Your institute here',
                                  logoLeft=NULL,
                                  logoLeftDims=c(300,100),
                                  logoRight=NULL,
                                  logoRightDims=c('100%',NA)){
  setwd(pfad)
  filename<-mainname
  css <- readChar(paste0(savePath,css_style), 10000)
  
  printLogoLeft <- function(){
    paste(trimws(capture.output(
      cat(paste0("<img  id='trans'  name=p1 align=left src=",logoLeft," width = ",logoLeftDims[1],
                 "  height = ",logoLeftDims[2],"  border='0' >"))
    )),collapse='')
  }
  
  printLogoRight <- function(){
    paste(trimws(capture.output(
      cat(paste0("<img  id='trans'  name=p1 align=right src=",logoRight," width = ",logoRightDims[1],
                 "  height = ",logoRightDims[2],"  border='0' >"))
    )),collapse='')
  }
  
  write(paste("
              <HTML><Head><Title>",paste(date()),"</Title> <style type='text/css'>", css ," </style></Head><body> <div id='cont'>
              <p>",
              
              if(!is.null(logoLeft)) printLogoLeft(),
              if(!is.null(logoRight)) printLogoRight(),
              "       
              <br><br><br><br></p>
              <hr>
              <H2 align=center>",title,"<br></h2><h4>",subtitle,"</h4>
              <hr>
              <div  id='navcontainer'>
              <H2 id='udl' name=mainpage> Table of contents </H2>",
              
              # Loop through headers and pages for each header            
              paste(trimws(capture.output(
                for(h in 1:length(headerVec)){
                  cat(paste("<H3  id='lih'>",headerVec[h],"</H3><ul id='navlist'>"))
                  for(p in 1:length(pageList[[h]])){
                    cat(paste("<li><a href=",
                              paste0('Tabellen/header_',h,'_page_',p,'.html>'),
                              pageList[[h]][p],
                              "</a></li>"))
                  }
                  cat(paste0('</ul>'))
                })),collapse='')
              ,
              # End paste and input signature
              "</div><hr>"),filename)
  
  print_signature2(sigName,
                   sigRole,
                   department = sigDept,
                   institute = sigInst,
                   email=sigEmail,
                   file=mainname)
}

#=========================================#
# Create the child pages                  #
#=========================================#

create_html_sub_page <- function(fileName,
                                 printList=NULL,
                                 printNames=NULL,
                                 printCaptions=NULL,
                                 imageVec=NULL,
                                 imageNames=NULL,
                                 imageCaptions=NULL,
                                 imageDims=c(NULL,NULL),
                                 imagesFirst=TRUE){
  
  setwd(pfad)
  filename<-paste0(fileName,".html")
  if('pfad0'%in%ls(globalenv())==FALSE){stop("Object pfad0 does not exist. Please run init_html_settings() first.")}
  css <- readChar(paste0(pfad0,css_style), 10000)
  
  ## Display data.frames or matrices
  printTab <- function(){
    paste(trimws(capture.output(
      for(p in 1:length(printList)){
        write.xlsx(printList[[p]],paste0('Tabellen/',gsub('.html','',fileName),'_table_',p,'.xlsx'))
        doc <- read_docx()
        doc <- body_add_flextable(doc, value = autofit(flextable(as.data.frame(printList[[p]]))))
        fileout <- tempfile(fileext = ".docx")
        fileout <- paste0('Tabellen/',gsub('.html','',fileName),'_table_',p,'.docx') 
        print(doc, target = fileout)
        cat("<h3>",printNames[p],"</h3> <hr>",
            capture.output(kable(printList[[p]], escape = FALSE)),
            "<p><a href=",paste0(gsub('.html','',fileName),'_table_',p,'.xlsx'),
            "> Save as .xlsx file.</a><br>
            <a href=",paste0(gsub('.html','',fileName),'_table_',p,'.docx'),
            ">Save as .docx file.</a> (Note: use the Autofit Window option in Word if table doesn't fit page.)</p>
            <p>",
            printCaptions[p],"</p><hr>")}
    )),collapse='')
      }
  
  ## Display images
  printImg <- function(){
    paste(trimws(capture.output(
      for(i in 1:length(imageVec)){
        cat(paste0("<h3>",imageNames[i],"</h3> <hr>",
                   paste0("<img src='",imageVec[i],".png' width = ",
                          imageDims[1]," height = ",imageDims[2]," border='1'><p>
                          <a href='",imageVec[i],".png'>Save as .png file</a><br>
                          <a href='",imageVec[i],".wmf'>Save as .wmf file (editable with PowerPoint.)</a></p>"),
                   "<p>",imageCaptions[i],"</p><hr>"))}
        )),collapse='')
      }
  
  ## Page created on  
  write(paste0("
               <HTML><Head><Title>",paste(date())," </Title> <style type='text/css'>",css,
               "</style></Head><body> <div id='cont'><p>
               Page created on ", paste(date()),"</p>
               <hr>",
               
               if(imagesFirst==TRUE){
                 if(!is.null(imageVec)){
                   printImg()
                 }
               }
               ,
               if(imagesFirst==TRUE){
                 if(!is.null(printList)){
                   printTab()
                 }
               }
               ,
               if(imagesFirst==FALSE){
                 if(!is.null(printList)){
                   printTab()
                 }
               }
               ,
               if(imagesFirst==FALSE){
                 if(!is.null(imageVec)){
                   printImg()
                 }
               }
               
               ## End write, add back to main page link
  ), paste0('Tabellen/',filename))
  write(paste("<p><a id='link' href=../",
              mainname,
              ">Back to main page</a></p></div></Body></HTML>", sep=''),
        paste0('Tabellen/',filename),append=T)
  }

# combine different functions in an all-encompassing pipeline
html_pipeline <- function(funPath=getwd(),
                          css_style='css_filename',
                          fileName,
                          bg_theme='smooth',
                          html_bgcol=NULL,
                          html_headercol=NULL,
                          bg_opacity=0.2,
                          left_align=TRUE,
                          savePath=NULL,
                          title=NULL,
                          subtitle=NULL,
                          headerVec=NULL,
                          pageList=NULL,
                          sigName='Your name here',
                          sigRole='Your role here',
                          sigEmail='youremail@email.com',
                          sigDept='Your department here',
                          sigInst='Your institute here',
                          logoLeft=NULL,
                          logoLeftDims=c(300,100),
                          logoRight=NULL,
                          logoRightDims=c('100%',NA),
                          printList_list=NULL,
                          printNames_list=NULL,
                          printCaptions_list=NULL,
                          imageVec_list=NULL,
                          imageNames_list=NULL,
                          imageCaptions_list=NULL,
                          imageDims_list=c(NULL,NULL),
                          imagesFirst_list=TRUE){
  
  init_html_settings(funPath=funPath, 
                     css_style=css_style,
                     fileName=fileName,
                     bg_theme=bg_theme,
                     html_bgcol=html_bgcol,
                     html_headercol=html_headercol,
                     bg_opacity=bg_opacity,
                     left_align=left_align)
  
  create_html_main_page(savePath=savePath,
                        title=title,
                        subtitle=subtitle,
                        headerVec=headerVec,
                        pageList=pageList,
                        sigName=sigName,
                        sigRole=sigRole,
                        sigEmail=sigEmail,
                        sigDept=sigDept,
                        sigInst=sigInst,
                        logoLeft=logoLeft,
                        logoLeftDims=logoLeftDims,
                        logoRight=logoRight,
                        logoRightDims=logoRightDims)
  
  for(h in 1:length(headerVec)){
    for(p in 1:length(pageList[[h]])){
      nm <- paste0('header_',h,'_page_',p)
      create_html_sub_page(fileName=nm,
                           printList=printList_list[[h]][[p]],
                           printNames=printNames_list[[h]][[p]],
                           printCaptions=printCaptions_list[[h]][[p]],
                           imageVec=imageVec_list[[h]][[p]],
                           imageNames=imageNames_list[[h]][[p]],
                           imageCaptions=imageCaptions_list[[h]][[p]],
                           imageDims=imageDims_list[[h]][[p]],
                           imagesFirst=imagesFirst_list[[h]][[p]])
    }
  }
  
}

## code to create new template script

create_html_template <- function(path, open=TRUE, fileName='html_template.R'){
  
  temp <- "
  #=================================================#
  # Initialize settings, load functions and data ----
  #=================================================#
  
  init_html_settings(funPath='C:/Documents/path_to_folder/',
  css_style='name_of_existing_file_without_extension', # if NULL, makes new file
  fileName='desired_output_file_name.html')
  
  #========================#
  # Personal information   #
  #========================#
  
  your_name <- 'Jane Doe, PhD'
  your_role <- 'Statistician'
  your_email <- 'jane.doe@gmail.com'
  
  #====================================================#
  # Objects for the sub pages                       ----
  #====================================================#
  
  # Define your objects here
  
  # images should be saved into the generated folder 'Tabellen'
  # specify their names (without file extension) in the imageVec argument of create_html_sub_page
  imgnames_1_1 <- c('Figure 1') # without extension, should refer to a plot saved into '/Tabellen'
  imgtitles_1_1 <- c('This is the title displayed above figure 1')
  
  # any data.frame or matrix can be printed by the functions specified below
  table_3_1_1 <- data.frame(matrix(seq(1:100),nrow=10,ncol=10))
  table_3_1_2 <- table_3_1_3 <- table_3_1_1
  
  
  #==============================================================================#
  #------------------------------------------------------------------------------#
  #==============================================================================#
  #                                                                              #
  #                     #    #   #######   #     #   #                           #
  #                     #    #      #      ##   ##   #                           #
  #                     ######      #      # ### #   #                           #
  #                     #    #      #      #  #  #   #                           #
  #                     #    #      #      #     #   ######                      #
  #                                                                              #
  #==============================================================================#
  
  #====================================================#
  # Information for the main page                      #
  #====================================================#===================================================#
  # Note: the pages should be a list, with each element corresponding to an element of the header vector   #
  #========================================================================================================#
  
  headers <- c('Header 1',
  'Header 2',
  'Header 3',
  'Header 4')
  pages <- list(pagelist1=c('Page 1.1',
  'Page 1.2',
  'Page 1.3'),
  pagelist2=c('Page 2.1',
  'Page 2.2',
  'Page 2.3',
  'Page 2.4',
  'Page 2.5'),
  pagelist3=c('Page 3.1'),
  pagelist4=c('Page 4.1',
  'Page 4.2'))
  
  #=========================================#
  # Generate main page                      #
  #=========================================#
  
  create_html_main_page(savePath='C:/Documents/path_to_folder/',
  title='Example multi-page HTML output file',
  subtitle='Subtitle on line 2',
  headerVec=headers,
  pageList=pages,
  sigName=your_name,
  sigRole=your_role,
  sigEmail=your_email)
  
  #=========================================#
  # Generate subpages                       #
  #=========================================#======================================================#
  # Note: for pages to link correctly the subpages should be named in the format header_i_page_j.  #
  # printList accepts a list of objects that can be converted to data.frame.                       #
  # printNames and printCaptions are vectors of equal length to printList in which titles/captions #
  # can be specified. imageVec accepts a vector of plot names (without extension).                 #
  # imageDims is a 1*2 numeric vector of the form c(x,y) specifying the width/height of all plots. # 
  #================================================================================================#
  
  #===========================#
  # Header 1              ---- 
  #===========================#
  
  create_html_sub_page(fileName = 'header_1_page_1',
  imageVec = imgnames_1_1,
  imageNames = imgtitles_1_1,
  imageDims=c(800,800))
  
  
  create_html_sub_page(fileName = 'header_1_page_2',
  imageVec = imgnames_1_2,
  imageNames = imgtitles_1_2,
  imageDims=c(800,800))
  
  
  create_html_sub_page(fileName = 'header_1_page_3',
  imageVec = imgnames_1_3,
  imageNames = imgtitles_1_3,
  imageCaptions=c('Caption for figure 1',
  'Caption for figure 2'))
  
  #===========================#
  # Header 2               ---- 
  #===========================#
  
  create_html_sub_page(fileName = 'header_2_page_1',
  imageVec = imgnames_2_1,
  imageNames = imgtitles_2_2,
  imageDims=c(800,800),
  imageCaptions='Caption for figure')
  
  create_html_sub_page(fileName = 'header_2_page_2',
  imageVec = imgnames_2_2,
  imageNames = imgtitles_2_2,
  imageDims=c(800,800),
  imageCaptions='Caption for figure')
  
  create_html_sub_page(fileName = 'header_2_page_3',
  printList=list(table_2_3_1,
  table_2_3_2,
  table_2_3_3),
  printNames=c('Title for table 1',
  'Title for table 2',
  'Title for table 3'),
  printCaptions=c('Captions for table 1',
  'Captions for table 2',
  'Captions for table 3'),
  imageVec = imgnames_2_3,
  imageNames = imgtitles_2_3,)
  
  create_html_sub_page(fileName = 'header_2_page_4',
  imageVec = imgnames_2_4,
  imageNames = imgtitles_2_4)
  
  create_html_sub_page(fileName = 'header_2_page_5',
  imageVec = imgnames_2_5,
  imageNames = imgtitles_2_5,
  imageDims=c(800,800))
  
  #===========================#
  # Header 3               ---- 
  #===========================#
  
  create_html_sub_page(fileName = 'header_3_page_1',
  printList=list(table_3_1_1,
  table_3_1_2,
  table_3_1_3),
  printNames=c('Title for table 1',
  'Title for table 2',
  'Title for table 3'),
  printCaptions=c('Captions for table 1',
  'Captions for table 2',
  'Captions for table 3'))
  
  #===========================#
  # Header 4               ---- 
  #===========================#
  
  create_html_sub_page(fileName = 'header_4_page_1',
  imageVec = imgnames_4_1,
  imageNames = imgtitles_4_1,
  imageDims=c(800,800))
  
  create_html_sub_page(fileName = 'header_4_page_2',
  imageVec = imgnames_4_2,
  imageNames = imgtitles_4_2,
  imageDims=c(800,800))
  
  #=====End======================================================================#
  #______________________________________________________________________________#
  
  
  "
  
  dest <- paste0(path,fileName)
  writeLines(temp, dest)
  if(open==TRUE) file.edit(dest)
}



#==============================================================================#
#                                                                              #
#==============================================================================#
#                                                                              #
#                         End of function definitions                          #
#                                                                              #
#==============================================================================#
#                                                                              #
#==============================================================================#
